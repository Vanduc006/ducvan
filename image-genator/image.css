.img-container {
    margin-top: 20px;
    display: grid;
    grid-gap: 20px;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    grid-auto-flow: dense;

}

.img-container > .items {
    display: flex;
    flex-direction: column;
    position: relative;
    background-color: #fff; 
    border-radius: 10px;
    padding: 10px;
    box-shadow: 0 5px 5px 0 rgba( 31, 38, 135, 0.37 );
backdrop-filter: blur( 4px );
-webkit-backdrop-filter: blur( 4px );
    /* background: hsla(138, 82%, 69%, 1);

background: linear-gradient(135deg, hsla(138, 82%, 69%, 1) 0%, hsla(186, 100%, 50%, 1) 100%);

background: -moz-linear-gradient(135deg, hsla(138, 82%, 69%, 1) 0%, hsla(186, 100%, 50%, 1) 100%);

background: -webkit-linear-gradient(135deg, hsla(138, 82%, 69%, 1) 0%, hsla(186, 100%, 50%, 1) 100%);

filter: progid: DXImageTransform.Microsoft.gradient( startColorstr="#6ef195", endColorstr="#00e3fd", GradientType=1 ); */
}

.img-container > .items > .imgs {
    max-width: 100%;
    height: auto;
    border-radius: 10px;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-drag: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    transition: opacity 0.5s ease-in-out;
    transition: 1s ease;
}
.img-container > .items > .imgs:hover {
    transform: translateY(-20px);
}

.items:hover .react {
    opacity: 1;
    z-index: 1;
}

.author-image {
    text-decoration: none;
    color: black;
}
.item-bottom {
    margin-top: 10px;
    display: block;
}
.react {
    float: right;
    cursor: pointer;
    
}
.btn-react {
    font-size: 20px;
}



/* .imgs-infor {
    max-inline-size: 400px;
    height: 100%;
    block-size: auto;
    object-fit: cover;
    object-position: center;

    border-radius: 10px;
    user-select: none;
    -moz-user-select: none;
    -webkit-user-drag: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    transition: opacity 0.5s ease-in-out;
    transition: 1s ease;
} */

  
  /* Media query cho chế độ mobile */

  
/* End Modal */


/* Bottm Sheet */

:root {
    --background: #fff;
    --foreground: #000;
    --divider: #dcdcdc;
    --overlay: #888;
  }
  
  @media (prefers-color-scheme: dark) {
    :root {
      --background: #000;
      --foreground: #fff;
      --divider: #333;
    }
  }
.sheet {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
  
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 99999;
    visibility: visible;
    transition: opacity 0.5s;
  }
  
  .sheet[aria-hidden="true"] {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
  }
  
  .sheet .overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    background: var(--overlay);
    opacity: 0.5;
    display: flex;
  }

  
  .sheet .contents {
    display: flex;
    flex-direction: column;
  
    border-radius: 1rem 1rem 0 0;
  
    background: var(--background);
  
    overflow-y: hidden;
  
    --default-transitions: transform 0.5s, border-radius 0.5s;
  
    transition: var(--default-transitions);
    transform: translateY(0);
  
  
    max-height: 100vh;
    height: 30vh;
  
    box-sizing: border-box;
  }
  
  .sheet .contents:not(.not-selectable) {
    transition: var(--default-transitions), height 0.5s;
  }
  
  .sheet .contents.fullscreen {
    border-radius: 0;
  }
  
  .sheet[aria-hidden="true"] .contents {
    transform: translateY(100%);
  }
  
  .sheet .controls {
    display: flex;
  }
  
  .sheet .draggable-area {
    width: 3rem;
    margin: auto;
    padding: 1rem;
    cursor: grab;
  }
  
  .sheet .draggable-thumb {
    width: inherit;
    height: 0.25rem;
    background: var(--divider);
    border-radius: 0.125rem;
  }
  
  .sheet .close-sheet {
    border: none;
    padding: 0.7rem;
    background: #fff;
  }
  
  .sheet .bodysheet {
    flex-grow: 1;
    height: 100%;
  
    display: flex;
    flex-direction: column;
  
    overflow-y: auto;
    gap: 1rem;
  
    padding: 1rem;
    box-sizing: border-box;
  }
  
  form {
    gap: 1rem;
  }